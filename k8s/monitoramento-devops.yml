apiVersion: v1
kind: Namespace
metadata:
  name: jeffersondevops

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: jeffersondevops
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: jeffersondevops
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: (webservice|redis)
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: container.*
            action: keep
          - source_labels: [__address__]
            action: replace
            target_label: __address__
            regex: (.+)
            replacement: $1:8080
---

apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: jeffersondevops
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: jeffersondevops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus-service-account  # -----
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
            - name: prometheus-storage
              mountPath: /prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
        - name: prometheus-storage
          persistentVolumeClaim:
            claimName: prometheus-pvc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: jeffersondevops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
      volumes:
        - name: grafana-storage
          emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: jeffersondevops
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
      nodePort: 30100